pipeline {
    agent { label 'jdk11-mvn3.8.4' }
    triggers {
        upstream(upstreamProjects: 'testfile', threshold: hudson.model.Result.SUCCESS)
        cron('30 */4 * * 1-5')
        pollSCM('45 */1 * * 0,6')
    }
    parameters {
        string(name: 'MAVEN_GOAL', defaultValue: 'clean package', description: 'for goal')
        choice(name: 'BUILD_TO_RUN', choices: ['main', 'petscripted', 'petdeclarated'], description: 'to build')
    }
    stages {
        stage('scm') {
            steps {
                git branch: 'main', url: 'https://github.com/nagaraju0/spring-petclinic.git'
            }
        }
        stage('build') {
            steps {
                sh '/usr/local/apache-maven-3.8.4/bin/mvn clean package'
            }
        }
        stage('archive') {
            steps {
                archiveArtifacts artifacts: 'target/*.jar', followSymlinks: false
            }
        }
        stage('publish test reports') {
            steps{
                junit '**/TEST-*.xml'
            }
        }
        stage("build & SonarQube analysis") {
            steps {
                withSonarQubeEnv('installationName:SONAR_9.2.1',envOnly: true , credentialsId: 'SONAR_TOKEN') {
                    SH "/usr/local/apache-maven-3.8.4/bin/mvn clean package sonar:sonar"
                                         echo "${env.SONAR_HOST_URL}"
                }
            }
        }    
    }
    post {
        always {
            mail from:"abbaigarimanavadu77@gmail.com",
                to:'nagarajucivil011@gmail.com',
                subject:"status of the pipeline : ${currentBuild.fullDisplayName}"
                body: "${env.BUILD_URL} has the result ${currentBuild.result}"
        }
    }
}